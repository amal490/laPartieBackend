
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 2.19.0
 * Query Engine version: c1455d0b443d66b0d9db9bcb1bb9ee0d5bbc511d
 */
Prisma.prismaVersion = {
  client: "2.19.0",
  engine: "c1455d0b443d66b0d9db9bcb1bb9ee0d5bbc511d"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */

Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = () => (val) => val

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.UsersScalarFieldEnum = makeEnum({
  userId: 'userId',
  name: 'name',
  username: 'username',
  email: 'email',
  password: 'password',
  roleId: 'roleId',
  code: 'code',
  status: 'status'
});

exports.Prisma.PrivilagiesScalarFieldEnum = makeEnum({
  roleId: 'roleId',
  role: 'role'
});

exports.Prisma.CartScalarFieldEnum = makeEnum({
  cartId: 'cartId',
  quantity: 'quantity',
  validate: 'validate',
  userId: 'userId',
  productId: 'productId'
});

exports.Prisma.ProductScalarFieldEnum = makeEnum({
  productId: 'productId',
  name: 'name',
  price: 'price',
  rating: 'rating',
  description: 'description',
  codeProd: 'codeProd',
  quantity: 'quantity',
  subCategoryId: 'subCategoryId'
});

exports.Prisma.DefaultImageScalarFieldEnum = makeEnum({
  defaultImageId: 'defaultImageId',
  url: 'url',
  productIdForDefaultImage: 'productIdForDefaultImage'
});

exports.Prisma.ImagesScalarFieldEnum = makeEnum({
  imagesId: 'imagesId',
  url: 'url',
  productIdForImages: 'productIdForImages'
});

exports.Prisma.SubCategoryScalarFieldEnum = makeEnum({
  subCategoryId: 'subCategoryId',
  name: 'name',
  categoryId: 'categoryId'
});

exports.Prisma.CategoryScalarFieldEnum = makeEnum({
  categoryId: 'categoryId',
  name: 'name'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});

exports.Prisma.QueryMode = makeEnum({
  default: 'default',
  insensitive: 'insensitive'
});
exports.Status = makeEnum({
  notActive: 'notActive',
  active: 'active',
  blocked: 'blocked'
});

exports.Role = makeEnum({
  INTERNAUTE: 'INTERNAUTE',
  CLIENT: 'CLIENT',
  ADMIN: 'ADMIN'
});

exports.Validate = makeEnum({
  VALID: 'VALID',
  NOTVALID: 'NOTVALID'
});

exports.Prisma.ModelName = makeEnum({
  Users: 'Users',
  Privilagies: 'Privilagies',
  Cart: 'Cart',
  Product: 'Product',
  DefaultImage: 'DefaultImage',
  Images: 'Images',
  SubCategory: 'SubCategory',
  Category: 'Category'
});

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
